# Generated by Django 4.0.3 on 2022-06-13 03:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('page_containers', '0001_initial'),
        ('content', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='pagecontainer',
            name='last_updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pagecontainer',
            name='projects',
            field=models.ManyToManyField(through='page_containers.PageContainedProject', to='content.project'),
        ),
        migrations.AddField(
            model_name='pagecontainedproject',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page_containers.pagecontainer'),
        ),
        migrations.AddField(
            model_name='pagecontainedproject',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.project'),
        ),
        migrations.AddField(
            model_name='pagecontainedjumbotron',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page_containers.pagecontainer'),
        ),
        migrations.AddField(
            model_name='pagecontainedjumbotron',
            name='jumbotron',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.jumbotron'),
        ),
        migrations.AddField(
            model_name='pagecontainedevent',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='page_containers.pagecontainer'),
        ),
        migrations.AddField(
            model_name='pagecontainedevent',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.event'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedproject',
            constraint=models.UniqueConstraint(fields=('container', 'project', 'section_order'), name='unique_container_project_order'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedproject',
            constraint=models.UniqueConstraint(fields=('container', 'section_order'), name='unique_container_order_for_contained_project'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedproject',
            constraint=models.UniqueConstraint(fields=('container', 'project'), name='unique_container_project'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedjumbotron',
            constraint=models.UniqueConstraint(fields=('container', 'jumbotron', 'section_order'), name='unique_container_jumbo_order'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedjumbotron',
            constraint=models.UniqueConstraint(fields=('container', 'section_order'), name='unique_container_order_for_contained_jumbotron'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedjumbotron',
            constraint=models.UniqueConstraint(fields=('container', 'jumbotron'), name='unique_container_jumbotron'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedevent',
            constraint=models.UniqueConstraint(fields=('container', 'event', 'section_order'), name='unique_container_event_order'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedevent',
            constraint=models.UniqueConstraint(fields=('container', 'section_order'), name='unique_container_order_for_contained_event'),
        ),
        migrations.AddConstraint(
            model_name='pagecontainedevent',
            constraint=models.UniqueConstraint(fields=('container', 'event'), name='unique_container_event'),
        ),
    ]
